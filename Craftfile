# -*- coding: utf8; mode: python -*-
# craftr_module(libs.szip)

from craftr import *
from craftr.ext.platform import cc, ld, ar
from craftr.ext import rules

# Test if we are in a source directory. In that case, we will
# compile szip from source.
if path.isfile(path.local('src/sz_api.c')):
  szip = Framework(
    include = path.local(['src', 'windows']),
    external_libs = [],
  )

  lib = ar.staticlib(
    output = 'szip',
    inputs = cc.compile(
      sources = path.glob('src/*.c'),
      frameworks = [szip],
    )
  )

  szip['external_libs'].append(lib.meta['staticlib_output'])

  test_bin = ld.link(
    output = 'test',
    inputs = cc.compile(
      sources = path.glob('test/*.c'),
      frameworks = [szip],
      target_name = 'test_obj',
      explicit = True,
    ),
    explicit = True,
  )
  test = rules.run(test_bin, cwd = project_dir)

# Otherwise, we determine they SZIP version installed on the system.
else:
  # XXX You are welcome to submit a patch!
  error('platform dependent detection of szip not yet implemented')
